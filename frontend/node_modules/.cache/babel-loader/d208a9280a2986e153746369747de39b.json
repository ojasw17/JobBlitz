{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Desktop\\\\JobBlitz\\\\frontend\\\\src\\\\component\\\\recruiter\\\\AcceptedApplicants.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { Button, Chip, Grid, IconButton, InputAdornment, makeStyles, Paper, TextField, Typography, Modal, Slider, FormControlLabel, FormGroup, MenuItem, Checkbox, Avatar } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport axios from \"axios\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { SetPopupContext } from \"../../App\";\nimport apiList, { server } from \"../../lib/apiList\";\nconst useStyles = makeStyles(theme => ({\n  body: {\n    height: \"inherit\"\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\"\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\"\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  avatar: {\n    width: theme.spacing(17),\n    height: theme.spacing(17)\n  }\n}));\n\nconst FilterPopup = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    open,\n    handleClose,\n    searchOptions,\n    setSearchOptions,\n    getData\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    onClose: handleClose,\n    className: classes.popupDialog,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        padding: \"50px\",\n        outline: \"none\",\n        minWidth: \"50%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        alignItems: \"center\",\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: \"Sort\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            container: true,\n            direction: \"row\",\n            xs: 9,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              xs: 6,\n              justify: \"space-around\",\n              alignItems: \"center\",\n              style: {\n                border: \"1px solid #D1D1D1\",\n                borderRadius: \"5px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  name: \"name\",\n                  checked: searchOptions.sort[\"jobApplicant.name\"].status,\n                  onChange: event => setSearchOptions({ ...searchOptions,\n                    sort: { ...searchOptions.sort,\n                      \"jobApplicant.name\": { ...searchOptions.sort[\"jobApplicant.name\"],\n                        status: event.target.checked\n                      }\n                    }\n                  }),\n                  id: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"name\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  disabled: !searchOptions.sort[\"jobApplicant.name\"].status,\n                  onClick: () => {\n                    setSearchOptions({ ...searchOptions,\n                      sort: { ...searchOptions.sort,\n                        \"jobApplicant.name\": { ...searchOptions.sort[\"jobApplicant.name\"],\n                          desc: !searchOptions.sort[\"jobApplicant.name\"].desc\n                        }\n                      }\n                    });\n                  },\n                  children: searchOptions.sort[\"jobApplicant.name\"].desc ? /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              xs: 6,\n              justify: \"space-around\",\n              alignItems: \"center\",\n              style: {\n                border: \"1px solid #D1D1D1\",\n                borderRadius: \"5px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  name: \"jobTitle\",\n                  checked: searchOptions.sort[\"job.title\"].status,\n                  onChange: event => setSearchOptions({ ...searchOptions,\n                    sort: { ...searchOptions.sort,\n                      \"job.title\": { ...searchOptions.sort[\"job.title\"],\n                        status: event.target.checked\n                      }\n                    }\n                  }),\n                  id: \"jobTitle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"jobTitle\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: \"Job Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  disabled: !searchOptions.sort[\"job.title\"].status,\n                  onClick: () => {\n                    setSearchOptions({ ...searchOptions,\n                      sort: { ...searchOptions.sort,\n                        \"job.title\": { ...searchOptions.sort[\"job.title\"],\n                          desc: !searchOptions.sort[\"job.title\"].desc\n                        }\n                      }\n                    });\n                  },\n                  children: searchOptions.sort[\"job.title\"].desc ? /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              xs: 6,\n              justify: \"space-around\",\n              alignItems: \"center\",\n              style: {\n                border: \"1px solid #D1D1D1\",\n                borderRadius: \"5px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  name: \"dateOfJoining\",\n                  checked: searchOptions.sort.dateOfJoining.status,\n                  onChange: event => setSearchOptions({ ...searchOptions,\n                    sort: { ...searchOptions.sort,\n                      dateOfJoining: { ...searchOptions.sort.dateOfJoining,\n                        status: event.target.checked\n                      }\n                    }\n                  }),\n                  id: \"dateOfJoining\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"dateOfJoining\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: \"Date of Joining\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  disabled: !searchOptions.sort.dateOfJoining.status,\n                  onClick: () => {\n                    setSearchOptions({ ...searchOptions,\n                      sort: { ...searchOptions.sort,\n                        dateOfJoining: { ...searchOptions.sort.dateOfJoining,\n                          desc: !searchOptions.sort.dateOfJoining.desc\n                        }\n                      }\n                    });\n                  },\n                  children: searchOptions.sort.dateOfJoining.desc ? /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              xs: 6,\n              justify: \"space-around\",\n              alignItems: \"center\",\n              style: {\n                border: \"1px solid #D1D1D1\",\n                borderRadius: \"5px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  name: \"rating\",\n                  checked: searchOptions.sort[\"jobApplicant.rating\"].status,\n                  onChange: event => setSearchOptions({ ...searchOptions,\n                    sort: { ...searchOptions.sort,\n                      \"jobApplicant.rating\": { ...searchOptions.sort[[\"jobApplicant.rating\"]],\n                        status: event.target.checked\n                      }\n                    }\n                  }),\n                  id: \"rating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"rating\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: \"Rating\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  disabled: !searchOptions.sort[\"jobApplicant.rating\"].status,\n                  onClick: () => {\n                    setSearchOptions({ ...searchOptions,\n                      sort: { ...searchOptions.sort,\n                        \"jobApplicant.rating\": { ...searchOptions.sort[\"jobApplicant.rating\"],\n                          desc: !searchOptions.sort[\"jobApplicant.rating\"].desc\n                        }\n                      }\n                    });\n                  },\n                  children: searchOptions.sort[\"jobApplicant.rating\"].desc ? /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            style: {\n              padding: \"10px 50px\"\n            },\n            onClick: () => getData(),\n            children: \"Apply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FilterPopup, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = FilterPopup;\n\nconst ApplicationTile = props => {\n  _s2();\n\n  const classes = useStyles();\n  const {\n    application,\n    getData\n  } = props;\n  const setPopup = useContext(SetPopupContext);\n  const [open, setOpen] = useState(false);\n  const [openEndJob, setOpenEndJob] = useState(false);\n  const [rating, setRating] = useState(application.jobApplicant.rating);\n  const appliedOn = new Date(application.dateOfApplication);\n\n  const changeRating = () => {\n    axios.put(apiList.rating, {\n      rating: rating,\n      applicantId: application.jobApplicant.userId\n    }, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(response => {\n      console.log(response.data);\n      setPopup({\n        open: true,\n        severity: \"success\",\n        message: \"Rating updated successfully\"\n      }); // fetchRating();\n\n      getData();\n      setOpen(false);\n    }).catch(err => {\n      // console.log(err.response);\n      console.log(err);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: err.response.data.message\n      }); // fetchRating();\n\n      getData();\n      setOpen(false);\n    });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCloseEndJob = () => {\n    setOpenEndJob(false);\n  };\n\n  const colorSet = {\n    applied: \"#3454D1\",\n    shortlisted: \"#DC851F\",\n    accepted: \"#09BC8A\",\n    rejected: \"#D1345B\",\n    deleted: \"#B49A67\",\n    cancelled: \"#FF8484\",\n    finished: \"#4EA5D9\"\n  };\n\n  const getResume = () => {\n    if (application.jobApplicant.resume && application.jobApplicant.resume !== \"\") {\n      const address = `${server}${application.jobApplicant.resume}`;\n      console.log(address);\n      axios(address, {\n        method: \"GET\",\n        responseType: \"blob\"\n      }).then(response => {\n        const file = new Blob([response.data], {\n          type: \"application/pdf\"\n        });\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL);\n      }).catch(error => {\n        console.log(error);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\"\n        });\n      });\n    } else {\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"No resume found\"\n      });\n    }\n  };\n\n  const updateStatus = status => {\n    const address = `${apiList.applications}/${application._id}`;\n    const statusData = {\n      status: status,\n      dateOfJoining: new Date().toISOString()\n    };\n    axios.put(address, statusData, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(response => {\n      setPopup({\n        open: true,\n        severity: \"success\",\n        message: response.data.message\n      });\n      handleCloseEndJob();\n      getData();\n    }).catch(err => {\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: err.response.data.message\n      });\n      console.log(err.response);\n      handleCloseEndJob();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.jobTileOuter,\n    elevation: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          src: `${server}${application.jobApplicant.profile}`,\n          className: classes.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: 7,\n        spacing: 1,\n        direction: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: application.jobApplicant.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Rating, {\n            value: application.jobApplicant.rating !== -1 ? application.jobApplicant.rating : null,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [\"Job Title: \", application.job.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [\"Role: \", application.job.jobType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [\"Applied On: \", appliedOn.toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [\"SOP: \", application.sop !== \"\" ? application.sop : \"Not Submitted\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: application.jobApplicant.skills.map(skill => /*#__PURE__*/_jsxDEV(Chip, {\n            label: skill,\n            style: {\n              marginRight: \"2px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        direction: \"column\",\n        xs: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            className: classes.statusBlock,\n            color: \"primary\",\n            onClick: () => getResume(),\n            children: \"Download Resume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          xs: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.statusBlock,\n            style: {\n              background: \"#09BC8A\"\n            },\n            onClick: () => {\n              setOpenEndJob(true);\n            },\n            children: \"End Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.statusBlock,\n            onClick: () => {\n              setOpen(true);\n            },\n            children: \"Rate Applicant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      className: classes.popupDialog,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          padding: \"20px\",\n          outline: \"none\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          minWidth: \"30%\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Rating, {\n          name: \"simple-controlled\",\n          style: {\n            marginBottom: \"30px\"\n          },\n          value: rating === -1 ? null : rating,\n          onChange: (event, newValue) => {\n            setRating(newValue);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          style: {\n            padding: \"10px 50px\"\n          },\n          onClick: () => changeRating(),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openEndJob,\n      onClose: handleCloseEndJob,\n      className: classes.popupDialog,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          padding: \"20px\",\n          outline: \"none\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          minWidth: \"30%\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: \"Are you sure?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          spacing: 5,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              style: {\n                padding: \"10px 50px\"\n              },\n              onClick: () => {\n                updateStatus(\"finished\");\n              },\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              style: {\n                padding: \"10px 50px\"\n              },\n              onClick: () => handleCloseEndJob(),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 453,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ApplicationTile, \"Mc4h7qP52DhWqePTbhXQF1tkSto=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = ApplicationTile;\n\nconst AcceptedApplicants = props => {\n  _s3();\n\n  const setPopup = useContext(SetPopupContext);\n  const [applications, setApplications] = useState([]);\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [searchOptions, setSearchOptions] = useState({\n    sort: {\n      \"jobApplicant.name\": {\n        status: false,\n        desc: false\n      },\n      \"job.title\": {\n        status: false,\n        desc: false\n      },\n      dateOfJoining: {\n        status: true,\n        desc: true\n      },\n      \"jobApplicant.rating\": {\n        status: false,\n        desc: false\n      }\n    }\n  });\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let searchParams = [];\n    searchParams = [...searchParams, `status=accepted`];\n    let asc = [],\n        desc = [];\n    Object.keys(searchOptions.sort).forEach(obj => {\n      const item = searchOptions.sort[obj];\n\n      if (item.status) {\n        if (item.desc) {\n          desc = [...desc, `desc=${obj}`];\n        } else {\n          asc = [...asc, `asc=${obj}`];\n        }\n      }\n    });\n    searchParams = [...searchParams, ...asc, ...desc];\n    const queryString = searchParams.join(\"&\");\n    console.log(queryString);\n    let address = `${apiList.applicants}`;\n\n    if (queryString !== \"\") {\n      address = `${address}?${queryString}`;\n    }\n\n    console.log(address);\n    axios.get(address, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(response => {\n      console.log(response.data);\n      setApplications(response.data);\n    }).catch(err => {\n      console.log(err.response); // console.log(err.response.data);\n\n      setApplications([]);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: err.response.data.message\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      item: true,\n      direction: \"column\",\n      alignItems: \"center\",\n      style: {\n        padding: \"30px\",\n        minHeight: \"93vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          children: \"Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => setFilterOpen(true),\n          children: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: true,\n        direction: \"column\",\n        style: {\n          width: \"100%\"\n        },\n        alignItems: \"stretch\",\n        justify: \"center\",\n        children: applications.length > 0 ? applications.map(obj => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(ApplicationTile, {\n            application: obj,\n            getData: getData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"No Applications Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterPopup, {\n      open: filterOpen,\n      searchOptions: searchOptions,\n      setSearchOptions: setSearchOptions,\n      handleClose: () => setFilterOpen(false),\n      getData: () => {\n        getData();\n        setFilterOpen(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s3(AcceptedApplicants, \"AqhWeKcCq185EmZ3GCXu5Ygy3Kc=\");\n\n_c3 = AcceptedApplicants;\nexport default AcceptedApplicants;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FilterPopup\");\n$RefreshReg$(_c2, \"ApplicationTile\");\n$RefreshReg$(_c3, \"AcceptedApplicants\");","map":{"version":3,"sources":["C:/Users/Lenovo/OneDrive/Desktop/JobBlitz/frontend/src/component/recruiter/AcceptedApplicants.js"],"names":["useState","useEffect","useContext","Button","Chip","Grid","IconButton","InputAdornment","makeStyles","Paper","TextField","Typography","Modal","Slider","FormControlLabel","FormGroup","MenuItem","Checkbox","Avatar","useParams","Rating","axios","FilterListIcon","ArrowUpwardIcon","ArrowDownwardIcon","SetPopupContext","apiList","server","useStyles","theme","body","height","statusBlock","width","display","alignItems","justifyContent","textTransform","jobTileOuter","padding","margin","boxSizing","popupDialog","avatar","spacing","FilterPopup","props","classes","open","handleClose","searchOptions","setSearchOptions","getData","outline","minWidth","border","borderRadius","sort","status","event","target","checked","desc","dateOfJoining","ApplicationTile","application","setPopup","setOpen","openEndJob","setOpenEndJob","rating","setRating","jobApplicant","appliedOn","Date","dateOfApplication","changeRating","put","applicantId","userId","headers","Authorization","localStorage","getItem","then","response","console","log","data","severity","message","catch","err","handleCloseEndJob","colorSet","applied","shortlisted","accepted","rejected","deleted","cancelled","finished","getResume","resume","address","method","responseType","file","Blob","type","fileURL","URL","createObjectURL","window","error","updateStatus","applications","_id","statusData","toISOString","profile","name","job","title","jobType","toLocaleDateString","sop","skills","map","skill","marginRight","background","flexDirection","marginBottom","newValue","AcceptedApplicants","setApplications","filterOpen","setFilterOpen","searchParams","asc","Object","keys","forEach","obj","item","queryString","join","applicants","get","minHeight","length","textAlign"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,UAJF,EAKEC,cALF,EAMEC,UANF,EAOEC,KAPF,EAQEC,SARF,EASEC,UATF,EAUEC,KAVF,EAWEC,MAXF,EAYEC,gBAZF,EAaEC,SAbF,EAcEC,QAdF,EAeEC,QAfF,EAgBEC,MAhBF,QAiBO,mBAjBP;AAkBA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AAEA,SAASC,eAAT,QAAgC,WAAhC;AAEA,OAAOC,OAAP,IAAkBC,MAAlB,QAAgC,mBAAhC;AAEA,MAAMC,SAAS,GAAGpB,UAAU,CAAEqB,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE;AADJ,GADiC;AAIvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,KAAK,EAAE,MADI;AAEXF,IAAAA,MAAM,EAAE,MAFG;AAGXG,IAAAA,OAAO,EAAE,MAHE;AAIXC,IAAAA,UAAU,EAAE,QAJD;AAKXC,IAAAA,cAAc,EAAE,QALL;AAMXC,IAAAA,aAAa,EAAE;AANJ,GAJ0B;AAYvCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE,MADG;AAEZC,IAAAA,MAAM,EAAE,QAFI;AAGZC,IAAAA,SAAS,EAAE,YAHC;AAIZR,IAAAA,KAAK,EAAE;AAJK,GAZyB;AAkBvCS,EAAAA,WAAW,EAAE;AACXX,IAAAA,MAAM,EAAE,MADG;AAEXG,IAAAA,OAAO,EAAE,MAFE;AAGXC,IAAAA,UAAU,EAAE,QAHD;AAIXC,IAAAA,cAAc,EAAE;AAJL,GAlB0B;AAwBvCO,EAAAA,MAAM,EAAE;AACNV,IAAAA,KAAK,EAAEJ,KAAK,CAACe,OAAN,CAAc,EAAd,CADD;AAENb,IAAAA,MAAM,EAAEF,KAAK,CAACe,OAAN,CAAc,EAAd;AAFF;AAxB+B,CAAZ,CAAD,CAA5B;;AA8BA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,OAAO,GAAGnB,SAAS,EAAzB;AACA,QAAM;AAAEoB,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA,aAArB;AAAoCC,IAAAA,gBAApC;AAAsDC,IAAAA;AAAtD,MAAkEN,KAAxE;AACA,sBACE,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEE,IAAb;AAAmB,IAAA,OAAO,EAAEC,WAA5B;AAAyC,IAAA,SAAS,EAAEF,OAAO,CAACL,WAA5D;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,KAAK,EAAE;AACLH,QAAAA,OAAO,EAAE,MADJ;AAELc,QAAAA,OAAO,EAAE,MAFJ;AAGLC,QAAAA,QAAQ,EAAE;AAHL,OADT;AAAA,6BAOE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAC,QAA1B;AAAmC,QAAA,UAAU,EAAC,QAA9C;AAAuD,QAAA,OAAO,EAAE,CAAhE;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,IAAI,MAApB;AAAqB,UAAA,UAAU,EAAC,QAAhC;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,SAAS,MAApB;AAAqB,YAAA,SAAS,EAAC,KAA/B;AAAqC,YAAA,EAAE,EAAE,CAAzC;AAAA,oCACE,QAAC,IAAD;AACE,cAAA,IAAI,MADN;AAEE,cAAA,SAAS,MAFX;AAGE,cAAA,EAAE,EAAE,CAHN;AAIE,cAAA,OAAO,EAAC,cAJV;AAKE,cAAA,UAAU,EAAC,QALb;AAME,cAAA,KAAK,EAAE;AAAEC,gBAAAA,MAAM,EAAE,mBAAV;AAA+BC,gBAAAA,YAAY,EAAE;AAA7C,eANT;AAAA,sCAQE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,uCACE,QAAC,QAAD;AACE,kBAAA,IAAI,EAAC,MADP;AAEE,kBAAA,OAAO,EAAEN,aAAa,CAACO,IAAd,CAAmB,mBAAnB,EAAwCC,MAFnD;AAGE,kBAAA,QAAQ,EAAGC,KAAD,IACRR,gBAAgB,CAAC,EACf,GAAGD,aADY;AAEfO,oBAAAA,IAAI,EAAE,EACJ,GAAGP,aAAa,CAACO,IADb;AAEJ,2CAAqB,EACnB,GAAGP,aAAa,CAACO,IAAd,CAAmB,mBAAnB,CADgB;AAEnBC,wBAAAA,MAAM,EAAEC,KAAK,CAACC,MAAN,CAAaC;AAFF;AAFjB;AAFS,mBAAD,CAJpB;AAeE,kBAAA,EAAE,EAAC;AAfL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBARF,eA2BE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,uCACE;AAAO,kBAAA,GAAG,EAAC,MAAX;AAAA,yCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA3BF,eAgCE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,uCACE,QAAC,UAAD;AACE,kBAAA,QAAQ,EAAE,CAACX,aAAa,CAACO,IAAd,CAAmB,mBAAnB,EAAwCC,MADrD;AAEE,kBAAA,OAAO,EAAE,MAAM;AACbP,oBAAAA,gBAAgB,CAAC,EACf,GAAGD,aADY;AAEfO,sBAAAA,IAAI,EAAE,EACJ,GAAGP,aAAa,CAACO,IADb;AAEJ,6CAAqB,EACnB,GAAGP,aAAa,CAACO,IAAd,CAAmB,mBAAnB,CADgB;AAEnBK,0BAAAA,IAAI,EAAE,CAACZ,aAAa,CAACO,IAAd,CAAmB,mBAAnB,EAAwCK;AAF5B;AAFjB;AAFS,qBAAD,CAAhB;AAUD,mBAbH;AAAA,4BAeGZ,aAAa,CAACO,IAAd,CAAmB,mBAAnB,EAAwCK,IAAxC,gBACC,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,0BADD,gBAGC,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAlBJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAyDE,QAAC,IAAD;AACE,cAAA,IAAI,MADN;AAEE,cAAA,SAAS,MAFX;AAGE,cAAA,EAAE,EAAE,CAHN;AAIE,cAAA,OAAO,EAAC,cAJV;AAKE,cAAA,UAAU,EAAC,QALb;AAME,cAAA,KAAK,EAAE;AAAEP,gBAAAA,MAAM,EAAE,mBAAV;AAA+BC,gBAAAA,YAAY,EAAE;AAA7C,eANT;AAAA,sCAQE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,uCACE,QAAC,QAAD;AACE,kBAAA,IAAI,EAAC,UADP;AAEE,kBAAA,OAAO,EAAEN,aAAa,CAACO,IAAd,CAAmB,WAAnB,EAAgCC,MAF3C;AAGE,kBAAA,QAAQ,EAAGC,KAAD,IACRR,gBAAgB,CAAC,EACf,GAAGD,aADY;AAEfO,oBAAAA,IAAI,EAAE,EACJ,GAAGP,aAAa,CAACO,IADb;AAEJ,mCAAa,EACX,GAAGP,aAAa,CAACO,IAAd,CAAmB,WAAnB,CADQ;AAEXC,wBAAAA,MAAM,EAAEC,KAAK,CAACC,MAAN,CAAaC;AAFV;AAFT;AAFS,mBAAD,CAJpB;AAeE,kBAAA,EAAE,EAAC;AAfL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBARF,eA2BE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,uCACE;AAAO,kBAAA,GAAG,EAAC,UAAX;AAAA,yCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA3BF,eAgCE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,uCACE,QAAC,UAAD;AACE,kBAAA,QAAQ,EAAE,CAACX,aAAa,CAACO,IAAd,CAAmB,WAAnB,EAAgCC,MAD7C;AAEE,kBAAA,OAAO,EAAE,MAAM;AACbP,oBAAAA,gBAAgB,CAAC,EACf,GAAGD,aADY;AAEfO,sBAAAA,IAAI,EAAE,EACJ,GAAGP,aAAa,CAACO,IADb;AAEJ,qCAAa,EACX,GAAGP,aAAa,CAACO,IAAd,CAAmB,WAAnB,CADQ;AAEXK,0BAAAA,IAAI,EAAE,CAACZ,aAAa,CAACO,IAAd,CAAmB,WAAnB,EAAgCK;AAF5B;AAFT;AAFS,qBAAD,CAAhB;AAUD,mBAbH;AAAA,4BAeGZ,aAAa,CAACO,IAAd,CAAmB,WAAnB,EAAgCK,IAAhC,gBACC,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,0BADD,gBAGC,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAlBJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzDF,eAiHE,QAAC,IAAD;AACE,cAAA,IAAI,MADN;AAEE,cAAA,SAAS,MAFX;AAGE,cAAA,EAAE,EAAE,CAHN;AAIE,cAAA,OAAO,EAAC,cAJV;AAKE,cAAA,UAAU,EAAC,QALb;AAME,cAAA,KAAK,EAAE;AAAEP,gBAAAA,MAAM,EAAE,mBAAV;AAA+BC,gBAAAA,YAAY,EAAE;AAA7C,eANT;AAAA,sCAQE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,uCACE,QAAC,QAAD;AACE,kBAAA,IAAI,EAAC,eADP;AAEE,kBAAA,OAAO,EAAEN,aAAa,CAACO,IAAd,CAAmBM,aAAnB,CAAiCL,MAF5C;AAGE,kBAAA,QAAQ,EAAGC,KAAD,IACRR,gBAAgB,CAAC,EACf,GAAGD,aADY;AAEfO,oBAAAA,IAAI,EAAE,EACJ,GAAGP,aAAa,CAACO,IADb;AAEJM,sBAAAA,aAAa,EAAE,EACb,GAAGb,aAAa,CAACO,IAAd,CAAmBM,aADT;AAEbL,wBAAAA,MAAM,EAAEC,KAAK,CAACC,MAAN,CAAaC;AAFR;AAFX;AAFS,mBAAD,CAJpB;AAeE,kBAAA,EAAE,EAAC;AAfL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBARF,eA2BE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,uCACE;AAAO,kBAAA,GAAG,EAAC,eAAX;AAAA,yCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA3BF,eAgCE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,uCACE,QAAC,UAAD;AACE,kBAAA,QAAQ,EAAE,CAACX,aAAa,CAACO,IAAd,CAAmBM,aAAnB,CAAiCL,MAD9C;AAEE,kBAAA,OAAO,EAAE,MAAM;AACbP,oBAAAA,gBAAgB,CAAC,EACf,GAAGD,aADY;AAEfO,sBAAAA,IAAI,EAAE,EACJ,GAAGP,aAAa,CAACO,IADb;AAEJM,wBAAAA,aAAa,EAAE,EACb,GAAGb,aAAa,CAACO,IAAd,CAAmBM,aADT;AAEbD,0BAAAA,IAAI,EAAE,CAACZ,aAAa,CAACO,IAAd,CAAmBM,aAAnB,CAAiCD;AAF3B;AAFX;AAFS,qBAAD,CAAhB;AAUD,mBAbH;AAAA,4BAeGZ,aAAa,CAACO,IAAd,CAAmBM,aAAnB,CAAiCD,IAAjC,gBACC,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,0BADD,gBAGC,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAlBJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjHF,eAyKE,QAAC,IAAD;AACE,cAAA,IAAI,MADN;AAEE,cAAA,SAAS,MAFX;AAGE,cAAA,EAAE,EAAE,CAHN;AAIE,cAAA,OAAO,EAAC,cAJV;AAKE,cAAA,UAAU,EAAC,QALb;AAME,cAAA,KAAK,EAAE;AAAEP,gBAAAA,MAAM,EAAE,mBAAV;AAA+BC,gBAAAA,YAAY,EAAE;AAA7C,eANT;AAAA,sCAQE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,uCACE,QAAC,QAAD;AACE,kBAAA,IAAI,EAAC,QADP;AAEE,kBAAA,OAAO,EAAEN,aAAa,CAACO,IAAd,CAAmB,qBAAnB,EAA0CC,MAFrD;AAGE,kBAAA,QAAQ,EAAGC,KAAD,IACRR,gBAAgB,CAAC,EACf,GAAGD,aADY;AAEfO,oBAAAA,IAAI,EAAE,EACJ,GAAGP,aAAa,CAACO,IADb;AAEJ,6CAAuB,EACrB,GAAGP,aAAa,CAACO,IAAd,CAAmB,CAAC,qBAAD,CAAnB,CADkB;AAErBC,wBAAAA,MAAM,EAAEC,KAAK,CAACC,MAAN,CAAaC;AAFA;AAFnB;AAFS,mBAAD,CAJpB;AAeE,kBAAA,EAAE,EAAC;AAfL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBARF,eA2BE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,uCACE;AAAO,kBAAA,GAAG,EAAC,QAAX;AAAA,yCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA3BF,eAgCE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,uCACE,QAAC,UAAD;AACE,kBAAA,QAAQ,EAAE,CAACX,aAAa,CAACO,IAAd,CAAmB,qBAAnB,EAA0CC,MADvD;AAEE,kBAAA,OAAO,EAAE,MAAM;AACbP,oBAAAA,gBAAgB,CAAC,EACf,GAAGD,aADY;AAEfO,sBAAAA,IAAI,EAAE,EACJ,GAAGP,aAAa,CAACO,IADb;AAEJ,+CAAuB,EACrB,GAAGP,aAAa,CAACO,IAAd,CAAmB,qBAAnB,CADkB;AAErBK,0BAAAA,IAAI,EAAE,CAACZ,aAAa,CAACO,IAAd,CAAmB,qBAAnB,EACJK;AAHkB;AAFnB;AAFS,qBAAD,CAAhB;AAWD,mBAdH;AAAA,4BAgBGZ,aAAa,CAACO,IAAd,CAAmB,qBAAnB,EAA0CK,IAA1C,gBACC,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,0BADD,gBAGC,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAnBJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzKF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eA0OE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,WADV;AAEE,YAAA,KAAK,EAAC,SAFR;AAGE,YAAA,KAAK,EAAE;AAAEvB,cAAAA,OAAO,EAAE;AAAX,aAHT;AAIE,YAAA,OAAO,EAAE,MAAMa,OAAO,EAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA1OF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiQD,CApQD;;GAAMP,W;UACYjB,S;;;KADZiB,W;;AAsQN,MAAMmB,eAAe,GAAIlB,KAAD,IAAW;AAAA;;AACjC,QAAMC,OAAO,GAAGnB,SAAS,EAAzB;AACA,QAAM;AAAEqC,IAAAA,WAAF;AAAeb,IAAAA;AAAf,MAA2BN,KAAjC;AACA,QAAMoB,QAAQ,GAAGhE,UAAU,CAACuB,eAAD,CAA3B;AACA,QAAM,CAACuB,IAAD,EAAOmB,OAAP,IAAkBnE,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACoE,UAAD,EAAaC,aAAb,IAA8BrE,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACsE,MAAD,EAASC,SAAT,IAAsBvE,QAAQ,CAACiE,WAAW,CAACO,YAAZ,CAAyBF,MAA1B,CAApC;AAEA,QAAMG,SAAS,GAAG,IAAIC,IAAJ,CAAST,WAAW,CAACU,iBAArB,CAAlB;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACzBvD,IAAAA,KAAK,CACFwD,GADH,CAEInD,OAAO,CAAC4C,MAFZ,EAGI;AAAEA,MAAAA,MAAM,EAAEA,MAAV;AAAkBQ,MAAAA,WAAW,EAAEb,WAAW,CAACO,YAAZ,CAAyBO;AAAxD,KAHJ,EAII;AACEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADhD;AADX,KAJJ,EAUGC,IAVH,CAUSC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAtB,MAAAA,QAAQ,CAAC;AACPlB,QAAAA,IAAI,EAAE,IADC;AAEPyC,QAAAA,QAAQ,EAAE,SAFH;AAGPC,QAAAA,OAAO,EAAE;AAHF,OAAD,CAAR,CAFkB,CAOlB;;AACAtC,MAAAA,OAAO;AACPe,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD,KApBH,EAqBGwB,KArBH,CAqBUC,GAAD,IAAS;AACd;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACA1B,MAAAA,QAAQ,CAAC;AACPlB,QAAAA,IAAI,EAAE,IADC;AAEPyC,QAAAA,QAAQ,EAAE,OAFH;AAGPC,QAAAA,OAAO,EAAEE,GAAG,CAACP,QAAJ,CAAaG,IAAb,CAAkBE;AAHpB,OAAD,CAAR,CAHc,CAQd;;AACAtC,MAAAA,OAAO;AACPe,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD,KAhCH;AAiCD,GAlCD;;AAoCA,QAAMlB,WAAW,GAAG,MAAM;AACxBkB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAM0B,iBAAiB,GAAG,MAAM;AAC9BxB,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA,QAAMyB,QAAQ,GAAG;AACfC,IAAAA,OAAO,EAAE,SADM;AAEfC,IAAAA,WAAW,EAAE,SAFE;AAGfC,IAAAA,QAAQ,EAAE,SAHK;AAIfC,IAAAA,QAAQ,EAAE,SAJK;AAKfC,IAAAA,OAAO,EAAE,SALM;AAMfC,IAAAA,SAAS,EAAE,SANI;AAOfC,IAAAA,QAAQ,EAAE;AAPK,GAAjB;;AAUA,QAAMC,SAAS,GAAG,MAAM;AACtB,QACErC,WAAW,CAACO,YAAZ,CAAyB+B,MAAzB,IACAtC,WAAW,CAACO,YAAZ,CAAyB+B,MAAzB,KAAoC,EAFtC,EAGE;AACA,YAAMC,OAAO,GAAI,GAAE7E,MAAO,GAAEsC,WAAW,CAACO,YAAZ,CAAyB+B,MAAO,EAA5D;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,OAAZ;AACAnF,MAAAA,KAAK,CAACmF,OAAD,EAAU;AACbC,QAAAA,MAAM,EAAE,KADK;AAEbC,QAAAA,YAAY,EAAE;AAFD,OAAV,CAAL,CAIGtB,IAJH,CAISC,QAAD,IAAc;AAClB,cAAMsB,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACvB,QAAQ,CAACG,IAAV,CAAT,EAA0B;AAAEqB,UAAAA,IAAI,EAAE;AAAR,SAA1B,CAAb;AACA,cAAMC,OAAO,GAAGC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAhB;AACAM,QAAAA,MAAM,CAACjE,IAAP,CAAY8D,OAAZ;AACD,OARH,EASGnB,KATH,CASUuB,KAAD,IAAW;AAChB5B,QAAAA,OAAO,CAACC,GAAR,CAAY2B,KAAZ;AACAhD,QAAAA,QAAQ,CAAC;AACPlB,UAAAA,IAAI,EAAE,IADC;AAEPyC,UAAAA,QAAQ,EAAE,OAFH;AAGPC,UAAAA,OAAO,EAAE;AAHF,SAAD,CAAR;AAKD,OAhBH;AAiBD,KAvBD,MAuBO;AACLxB,MAAAA,QAAQ,CAAC;AACPlB,QAAAA,IAAI,EAAE,IADC;AAEPyC,QAAAA,QAAQ,EAAE,OAFH;AAGPC,QAAAA,OAAO,EAAE;AAHF,OAAD,CAAR;AAKD;AACF,GA/BD;;AAiCA,QAAMyB,YAAY,GAAIzD,MAAD,IAAY;AAC/B,UAAM8C,OAAO,GAAI,GAAE9E,OAAO,CAAC0F,YAAa,IAAGnD,WAAW,CAACoD,GAAI,EAA3D;AACA,UAAMC,UAAU,GAAG;AACjB5D,MAAAA,MAAM,EAAEA,MADS;AAEjBK,MAAAA,aAAa,EAAE,IAAIW,IAAJ,GAAW6C,WAAX;AAFE,KAAnB;AAIAlG,IAAAA,KAAK,CACFwD,GADH,CACO2B,OADP,EACgBc,UADhB,EAC4B;AACxBtC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADhD;AADe,KAD5B,EAMGC,IANH,CAMSC,QAAD,IAAc;AAClBnB,MAAAA,QAAQ,CAAC;AACPlB,QAAAA,IAAI,EAAE,IADC;AAEPyC,QAAAA,QAAQ,EAAE,SAFH;AAGPC,QAAAA,OAAO,EAAEL,QAAQ,CAACG,IAAT,CAAcE;AAHhB,OAAD,CAAR;AAKAG,MAAAA,iBAAiB;AACjBzC,MAAAA,OAAO;AACR,KAdH,EAeGuC,KAfH,CAeUC,GAAD,IAAS;AACd1B,MAAAA,QAAQ,CAAC;AACPlB,QAAAA,IAAI,EAAE,IADC;AAEPyC,QAAAA,QAAQ,EAAE,OAFH;AAGPC,QAAAA,OAAO,EAAEE,GAAG,CAACP,QAAJ,CAAaG,IAAb,CAAkBE;AAHpB,OAAD,CAAR;AAKAJ,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACP,QAAhB;AACAQ,MAAAA,iBAAiB;AAClB,KAvBH;AAwBD,GA9BD;;AAgCA,sBACE,QAAC,KAAD;AAAO,IAAA,SAAS,EAAE9C,OAAO,CAACT,YAA1B;AAAwC,IAAA,SAAS,EAAE,CAAnD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,8BACE,QAAC,IAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,EAAE,EAAE,CAFN;AAGE,QAAA,KAAK,EAAE;AACLJ,UAAAA,OAAO,EAAE,MADJ;AAELE,UAAAA,cAAc,EAAE,QAFX;AAGLD,UAAAA,UAAU,EAAE;AAHP,SAHT;AAAA,+BASE,QAAC,MAAD;AACE,UAAA,GAAG,EAAG,GAAER,MAAO,GAAEsC,WAAW,CAACO,YAAZ,CAAyBgD,OAAQ,EADpD;AAEE,UAAA,SAAS,EAAEzE,OAAO,CAACJ;AAFrB;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,cADF,eAeE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,IAAI,MAApB;AAAqB,QAAA,EAAE,EAAE,CAAzB;AAA4B,QAAA,OAAO,EAAE,CAArC;AAAwC,QAAA,SAAS,EAAC,QAAlD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAA,sBACGsB,WAAW,CAACO,YAAZ,CAAyBiD;AAD5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,KAAK,EACHxD,WAAW,CAACO,YAAZ,CAAyBF,MAAzB,KAAoC,CAAC,CAArC,GACIL,WAAW,CAACO,YAAZ,CAAyBF,MAD7B,GAEI,IAJR;AAME,YAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF,eAgBE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,oCAAuBL,WAAW,CAACyD,GAAZ,CAAgBC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAiBE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,+BAAkB1D,WAAW,CAACyD,GAAZ,CAAgBE,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAkBE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,qCAAwBnD,SAAS,CAACoD,kBAAV,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF,eAmBE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,8BACQ5D,WAAW,CAAC6D,GAAZ,KAAoB,EAApB,GAAyB7D,WAAW,CAAC6D,GAArC,GAA2C,eADnD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF,eAsBE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,oBACG7D,WAAW,CAACO,YAAZ,CAAyBuD,MAAzB,CAAgCC,GAAhC,CAAqCC,KAAD,iBACnC,QAAC,IAAD;AAAM,YAAA,KAAK,EAAEA,KAAb;AAAoB,YAAA,KAAK,EAAE;AAAEC,cAAAA,WAAW,EAAE;AAAf;AAA3B;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eA2CE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,SAAS,MAApB;AAAqB,QAAA,SAAS,EAAC,QAA/B;AAAwC,QAAA,EAAE,EAAE,CAA5C;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,WADV;AAEE,YAAA,SAAS,EAAEnF,OAAO,CAACf,WAFrB;AAGE,YAAA,KAAK,EAAC,SAHR;AAIE,YAAA,OAAO,EAAE,MAAMsE,SAAS,EAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,SAAS,MAApB;AAAqB,UAAA,EAAE,MAAvB;AAAA,iCAEE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,WADV;AAEE,YAAA,KAAK,EAAC,SAFR;AAGE,YAAA,SAAS,EAAEvD,OAAO,CAACf,WAHrB;AAIE,YAAA,KAAK,EAAE;AACLmG,cAAAA,UAAU,EAAE;AADP,aAJT;AAOE,YAAA,OAAO,EAAE,MAAM;AACb9D,cAAAA,aAAa,CAAC,IAAD,CAAb;AACD,aATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,gBAXF,eA2BE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,WADV;AAEE,YAAA,KAAK,EAAC,SAFR;AAGE,YAAA,SAAS,EAAEtB,OAAO,CAACf,WAHrB;AAIE,YAAA,OAAO,EAAE,MAAM;AACbmC,cAAAA,OAAO,CAAC,IAAD,CAAP;AACD,aANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,cA3CF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAqFE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEnB,IAAb;AAAmB,MAAA,OAAO,EAAEC,WAA5B;AAAyC,MAAA,SAAS,EAAEF,OAAO,CAACL,WAA5D;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAE;AACLH,UAAAA,OAAO,EAAE,MADJ;AAELc,UAAAA,OAAO,EAAE,MAFJ;AAGLnB,UAAAA,OAAO,EAAE,MAHJ;AAILkG,UAAAA,aAAa,EAAE,QAJV;AAKLhG,UAAAA,cAAc,EAAE,QALX;AAMLkB,UAAAA,QAAQ,EAAE,KANL;AAOLnB,UAAAA,UAAU,EAAE;AAPP,SADT;AAAA,gCAWE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,mBADP;AAEE,UAAA,KAAK,EAAE;AAAEkG,YAAAA,YAAY,EAAE;AAAhB,WAFT;AAGE,UAAA,KAAK,EAAE/D,MAAM,KAAK,CAAC,CAAZ,GAAgB,IAAhB,GAAuBA,MAHhC;AAIE,UAAA,QAAQ,EAAE,CAACX,KAAD,EAAQ2E,QAAR,KAAqB;AAC7B/D,YAAAA,SAAS,CAAC+D,QAAD,CAAT;AACD;AANH;AAAA;AAAA;AAAA;AAAA,gBAXF,eAmBE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,KAAK,EAAE;AAAE/F,YAAAA,OAAO,EAAE;AAAX,WAHT;AAIE,UAAA,OAAO,EAAE,MAAMqC,YAAY,EAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YArFF,eAmHE,QAAC,KAAD;AACE,MAAA,IAAI,EAAER,UADR;AAEE,MAAA,OAAO,EAAEyB,iBAFX;AAGE,MAAA,SAAS,EAAE9C,OAAO,CAACL,WAHrB;AAAA,6BAKE,QAAC,KAAD;AACE,QAAA,KAAK,EAAE;AACLH,UAAAA,OAAO,EAAE,MADJ;AAELc,UAAAA,OAAO,EAAE,MAFJ;AAGLnB,UAAAA,OAAO,EAAE,MAHJ;AAILkG,UAAAA,aAAa,EAAE,QAJV;AAKLhG,UAAAA,cAAc,EAAE,QALX;AAMLkB,UAAAA,QAAQ,EAAE,KANL;AAOLnB,UAAAA,UAAU,EAAE;AAPP,SADT;AAAA,gCAWE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,KAAK,EAAE;AAAEkG,YAAAA,YAAY,EAAE;AAAhB,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAcE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAC,QAAxB;AAAiC,UAAA,OAAO,EAAE,CAA1C;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,WADV;AAEE,cAAA,KAAK,EAAC,WAFR;AAGE,cAAA,KAAK,EAAE;AAAE9F,gBAAAA,OAAO,EAAE;AAAX,eAHT;AAIE,cAAA,OAAO,EAAE,MAAM;AACb4E,gBAAAA,YAAY,CAAC,UAAD,CAAZ;AACD,eANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,WADV;AAEE,cAAA,KAAK,EAAC,SAFR;AAGE,cAAA,KAAK,EAAE;AAAE5E,gBAAAA,OAAO,EAAE;AAAX,eAHT;AAIE,cAAA,OAAO,EAAE,MAAMsD,iBAAiB,EAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YAnHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmKD,CApSD;;IAAM7B,e;UACYpC,S;;;MADZoC,e;;AAsSN,MAAMuE,kBAAkB,GAAIzF,KAAD,IAAW;AAAA;;AACpC,QAAMoB,QAAQ,GAAGhE,UAAU,CAACuB,eAAD,CAA3B;AACA,QAAM,CAAC2F,YAAD,EAAeoB,eAAf,IAAkCxI,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACyI,UAAD,EAAaC,aAAb,IAA8B1I,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACkD,aAAD,EAAgBC,gBAAhB,IAAoCnD,QAAQ,CAAC;AACjDyD,IAAAA,IAAI,EAAE;AACJ,2BAAqB;AACnBC,QAAAA,MAAM,EAAE,KADW;AAEnBI,QAAAA,IAAI,EAAE;AAFa,OADjB;AAKJ,mBAAa;AACXJ,QAAAA,MAAM,EAAE,KADG;AAEXI,QAAAA,IAAI,EAAE;AAFK,OALT;AASJC,MAAAA,aAAa,EAAE;AACbL,QAAAA,MAAM,EAAE,IADK;AAEbI,QAAAA,IAAI,EAAE;AAFO,OATX;AAaJ,6BAAuB;AACrBJ,QAAAA,MAAM,EAAE,KADa;AAErBI,QAAAA,IAAI,EAAE;AAFe;AAbnB;AAD2C,GAAD,CAAlD;AAqBA7D,EAAAA,SAAS,CAAC,MAAM;AACdmD,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,OAAO,GAAG,MAAM;AACpB,QAAIuF,YAAY,GAAG,EAAnB;AACAA,IAAAA,YAAY,GAAG,CAAC,GAAGA,YAAJ,EAAmB,iBAAnB,CAAf;AAEA,QAAIC,GAAG,GAAG,EAAV;AAAA,QACE9E,IAAI,GAAG,EADT;AAGA+E,IAAAA,MAAM,CAACC,IAAP,CAAY5F,aAAa,CAACO,IAA1B,EAAgCsF,OAAhC,CAAyCC,GAAD,IAAS;AAC/C,YAAMC,IAAI,GAAG/F,aAAa,CAACO,IAAd,CAAmBuF,GAAnB,CAAb;;AACA,UAAIC,IAAI,CAACvF,MAAT,EAAiB;AACf,YAAIuF,IAAI,CAACnF,IAAT,EAAe;AACbA,UAAAA,IAAI,GAAG,CAAC,GAAGA,IAAJ,EAAW,QAAOkF,GAAI,EAAtB,CAAP;AACD,SAFD,MAEO;AACLJ,UAAAA,GAAG,GAAG,CAAC,GAAGA,GAAJ,EAAU,OAAMI,GAAI,EAApB,CAAN;AACD;AACF;AACF,KATD;AAWAL,IAAAA,YAAY,GAAG,CAAC,GAAGA,YAAJ,EAAkB,GAAGC,GAArB,EAA0B,GAAG9E,IAA7B,CAAf;AACA,UAAMoF,WAAW,GAAGP,YAAY,CAACQ,IAAb,CAAkB,GAAlB,CAApB;AACA7D,IAAAA,OAAO,CAACC,GAAR,CAAY2D,WAAZ;AACA,QAAI1C,OAAO,GAAI,GAAE9E,OAAO,CAAC0H,UAAW,EAApC;;AACA,QAAIF,WAAW,KAAK,EAApB,EAAwB;AACtB1C,MAAAA,OAAO,GAAI,GAAEA,OAAQ,IAAG0C,WAAY,EAApC;AACD;;AAED5D,IAAAA,OAAO,CAACC,GAAR,CAAYiB,OAAZ;AAEAnF,IAAAA,KAAK,CACFgI,GADH,CACO7C,OADP,EACgB;AACZxB,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADhD;AADG,KADhB,EAMGC,IANH,CAMSC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAgD,MAAAA,eAAe,CAACnD,QAAQ,CAACG,IAAV,CAAf;AACD,KATH,EAUGG,KAVH,CAUUC,GAAD,IAAS;AACdN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACP,QAAhB,EADc,CAEd;;AACAmD,MAAAA,eAAe,CAAC,EAAD,CAAf;AACAtE,MAAAA,QAAQ,CAAC;AACPlB,QAAAA,IAAI,EAAE,IADC;AAEPyC,QAAAA,QAAQ,EAAE,OAFH;AAGPC,QAAAA,OAAO,EAAEE,GAAG,CAACP,QAAJ,CAAaG,IAAb,CAAkBE;AAHpB,OAAD,CAAR;AAKD,KAnBH;AAoBD,GAhDD;;AAkDA,sBACE;AAAA,4BACE,QAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,IAAI,MAFN;AAGE,MAAA,SAAS,EAAC,QAHZ;AAIE,MAAA,UAAU,EAAC,QAJb;AAKE,MAAA,KAAK,EAAE;AAAEnD,QAAAA,OAAO,EAAE,MAAX;AAAmB+G,QAAAA,SAAS,EAAE;AAA9B,OALT;AAAA,8BAOE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,MAAMZ,aAAa,CAAC,IAAD,CAAxC;AAAA,iCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF,eAeE,QAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,IAAI,MAFN;AAGE,QAAA,EAAE,MAHJ;AAIE,QAAA,SAAS,EAAC,QAJZ;AAKE,QAAA,KAAK,EAAE;AAAEzG,UAAAA,KAAK,EAAE;AAAT,SALT;AAME,QAAA,UAAU,EAAC,SANb;AAOE,QAAA,OAAO,EAAC,QAPV;AAAA,kBASGmF,YAAY,CAACmC,MAAb,GAAsB,CAAtB,GACCnC,YAAY,CAACY,GAAb,CAAkBgB,GAAD,iBACf,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCAEE,QAAC,eAAD;AAAiB,YAAA,WAAW,EAAEA,GAA9B;AAAmC,YAAA,OAAO,EAAE5F;AAA5C;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,gBADF,CADD,gBAQC,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,KAAK,EAAE;AAAEoG,YAAAA,SAAS,EAAE;AAAb,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBJ;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAuCE,QAAC,WAAD;AACE,MAAA,IAAI,EAAEf,UADR;AAEE,MAAA,aAAa,EAAEvF,aAFjB;AAGE,MAAA,gBAAgB,EAAEC,gBAHpB;AAIE,MAAA,WAAW,EAAE,MAAMuF,aAAa,CAAC,KAAD,CAJlC;AAKE,MAAA,OAAO,EAAE,MAAM;AACbtF,QAAAA,OAAO;AACPsF,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AARH;AAAA;AAAA;AAAA;AAAA,YAvCF;AAAA,kBADF;AAoDD,CAnID;;IAAMH,kB;;MAAAA,kB;AAqIN,eAAeA,kBAAf","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  MenuItem,\r\n  Checkbox,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport axios from \"axios\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList, { server } from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(17),\r\n    height: theme.spacing(17),\r\n  },\r\n}));\r\n\r\nconst FilterPopup = (props) => {\r\n  const classes = useStyles();\r\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\r\n  return (\r\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n      <Paper\r\n        style={{\r\n          padding: \"50px\",\r\n          outline: \"none\",\r\n          minWidth: \"50%\",\r\n        }}\r\n      >\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Sort\r\n            </Grid>\r\n            <Grid item container direction=\"row\" xs={9}>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={6}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"name\"\r\n                    checked={searchOptions.sort[\"jobApplicant.name\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.name\": {\r\n                            ...searchOptions.sort[\"jobApplicant.name\"],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"name\">\r\n                    <Typography>Name</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"jobApplicant.name\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.name\": {\r\n                            ...searchOptions.sort[\"jobApplicant.name\"],\r\n                            desc: !searchOptions.sort[\"jobApplicant.name\"].desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"jobApplicant.name\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={6}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"jobTitle\"\r\n                    checked={searchOptions.sort[\"job.title\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"job.title\": {\r\n                            ...searchOptions.sort[\"job.title\"],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"jobTitle\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"jobTitle\">\r\n                    <Typography>Job Title</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"job.title\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"job.title\": {\r\n                            ...searchOptions.sort[\"job.title\"],\r\n                            desc: !searchOptions.sort[\"job.title\"].desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"job.title\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={6}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"dateOfJoining\"\r\n                    checked={searchOptions.sort.dateOfJoining.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          dateOfJoining: {\r\n                            ...searchOptions.sort.dateOfJoining,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"dateOfJoining\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"dateOfJoining\">\r\n                    <Typography>Date of Joining</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.dateOfJoining.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          dateOfJoining: {\r\n                            ...searchOptions.sort.dateOfJoining,\r\n                            desc: !searchOptions.sort.dateOfJoining.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.dateOfJoining.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={6}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"rating\"\r\n                    checked={searchOptions.sort[\"jobApplicant.rating\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.rating\": {\r\n                            ...searchOptions.sort[[\"jobApplicant.rating\"]],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"rating\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"rating\">\r\n                    <Typography>Rating</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"jobApplicant.rating\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.rating\": {\r\n                            ...searchOptions.sort[\"jobApplicant.rating\"],\r\n                            desc: !searchOptions.sort[\"jobApplicant.rating\"]\r\n                              .desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"jobApplicant.rating\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\" }}\r\n              onClick={() => getData()}\r\n            >\r\n              Apply\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ApplicationTile = (props) => {\r\n  const classes = useStyles();\r\n  const { application, getData } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [open, setOpen] = useState(false);\r\n  const [openEndJob, setOpenEndJob] = useState(false);\r\n  const [rating, setRating] = useState(application.jobApplicant.rating);\r\n\r\n  const appliedOn = new Date(application.dateOfApplication);\r\n\r\n  const changeRating = () => {\r\n    axios\r\n      .put(\r\n        apiList.rating,\r\n        { rating: rating, applicantId: application.jobApplicant.userId },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: \"Rating updated successfully\",\r\n        });\r\n        // fetchRating();\r\n        getData();\r\n        setOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        console.log(err);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        // fetchRating();\r\n        getData();\r\n        setOpen(false);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCloseEndJob = () => {\r\n    setOpenEndJob(false);\r\n  };\r\n\r\n  const colorSet = {\r\n    applied: \"#3454D1\",\r\n    shortlisted: \"#DC851F\",\r\n    accepted: \"#09BC8A\",\r\n    rejected: \"#D1345B\",\r\n    deleted: \"#B49A67\",\r\n    cancelled: \"#FF8484\",\r\n    finished: \"#4EA5D9\",\r\n  };\r\n\r\n  const getResume = () => {\r\n    if (\r\n      application.jobApplicant.resume &&\r\n      application.jobApplicant.resume !== \"\"\r\n    ) {\r\n      const address = `${server}${application.jobApplicant.resume}`;\r\n      console.log(address);\r\n      axios(address, {\r\n        method: \"GET\",\r\n        responseType: \"blob\",\r\n      })\r\n        .then((response) => {\r\n          const file = new Blob([response.data], { type: \"application/pdf\" });\r\n          const fileURL = URL.createObjectURL(file);\r\n          window.open(fileURL);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: \"Error\",\r\n          });\r\n        });\r\n    } else {\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"No resume found\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateStatus = (status) => {\r\n    const address = `${apiList.applications}/${application._id}`;\r\n    const statusData = {\r\n      status: status,\r\n      dateOfJoining: new Date().toISOString(),\r\n    };\r\n    axios\r\n      .put(address, statusData, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        handleCloseEndJob();\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n        handleCloseEndJob();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar\r\n            src={`${server}${application.jobApplicant.profile}`}\r\n            className={classes.avatar}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={7} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">\r\n              {application.jobApplicant.name}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating\r\n              value={\r\n                application.jobApplicant.rating !== -1\r\n                  ? application.jobApplicant.rating\r\n                  : null\r\n              }\r\n              readOnly\r\n            />\r\n          </Grid>\r\n          <Grid item>Job Title: {application.job.title}</Grid>\r\n          <Grid item>Role: {application.job.jobType}</Grid>\r\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\r\n          <Grid item>\r\n            SOP: {application.sop !== \"\" ? application.sop : \"Not Submitted\"}\r\n          </Grid>\r\n          <Grid item>\r\n            {application.jobApplicant.skills.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={3}>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.statusBlock}\r\n              color=\"primary\"\r\n              onClick={() => getResume()}\r\n            >\r\n              Download Resume\r\n            </Button>\r\n          </Grid>\r\n          <Grid item container xs>\r\n            {/* {buttonSet[application.status]} */}\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.statusBlock}\r\n              style={{\r\n                background: \"#09BC8A\",\r\n              }}\r\n              onClick={() => {\r\n                setOpenEndJob(true);\r\n              }}\r\n            >\r\n              End Job\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.statusBlock}\r\n              onClick={() => {\r\n                setOpen(true);\r\n              }}\r\n            >\r\n              Rate Applicant\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Rating\r\n            name=\"simple-controlled\"\r\n            style={{ marginBottom: \"30px\" }}\r\n            value={rating === -1 ? null : rating}\r\n            onChange={(event, newValue) => {\r\n              setRating(newValue);\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            onClick={() => changeRating()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n      <Modal\r\n        open={openEndJob}\r\n        onClose={handleCloseEndJob}\r\n        className={classes.popupDialog}\r\n      >\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\r\n            Are you sure?\r\n          </Typography>\r\n          <Grid container justify=\"center\" spacing={5}>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => {\r\n                  updateStatus(\"finished\");\r\n                }}\r\n              >\r\n                Yes\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleCloseEndJob()}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst AcceptedApplicants = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [applications, setApplications] = useState([]);\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    sort: {\r\n      \"jobApplicant.name\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      \"job.title\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      dateOfJoining: {\r\n        status: true,\r\n        desc: true,\r\n      },\r\n      \"jobApplicant.rating\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    let searchParams = [];\r\n    searchParams = [...searchParams, `status=accepted`];\r\n\r\n    let asc = [],\r\n      desc = [];\r\n\r\n    Object.keys(searchOptions.sort).forEach((obj) => {\r\n      const item = searchOptions.sort[obj];\r\n      if (item.status) {\r\n        if (item.desc) {\r\n          desc = [...desc, `desc=${obj}`];\r\n        } else {\r\n          asc = [...asc, `asc=${obj}`];\r\n        }\r\n      }\r\n    });\r\n\r\n    searchParams = [...searchParams, ...asc, ...desc];\r\n    const queryString = searchParams.join(\"&\");\r\n    console.log(queryString);\r\n    let address = `${apiList.applicants}`;\r\n    if (queryString !== \"\") {\r\n      address = `${address}?${queryString}`;\r\n    }\r\n\r\n    console.log(address);\r\n\r\n    axios\r\n      .get(address, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setApplications(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        // console.log(err.response.data);\r\n        setApplications([]);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Employees</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton onClick={() => setFilterOpen(true)}>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          xs\r\n          direction=\"column\"\r\n          style={{ width: \"100%\" }}\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n        >\r\n          {applications.length > 0 ? (\r\n            applications.map((obj) => (\r\n              <Grid item>\r\n                {/* {console.log(obj)} */}\r\n                <ApplicationTile application={obj} getData={getData} />\r\n              </Grid>\r\n            ))\r\n          ) : (\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              No Applications Found\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <FilterPopup\r\n        open={filterOpen}\r\n        searchOptions={searchOptions}\r\n        setSearchOptions={setSearchOptions}\r\n        handleClose={() => setFilterOpen(false)}\r\n        getData={() => {\r\n          getData();\r\n          setFilterOpen(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AcceptedApplicants;\r\n"]},"metadata":{},"sourceType":"module"}