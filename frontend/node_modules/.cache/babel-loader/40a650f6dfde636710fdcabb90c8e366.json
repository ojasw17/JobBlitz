{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Desktop\\\\JobBlitz\\\\frontend\\\\src\\\\lib\\\\MessagePopup.js\";\nimport { Snackbar, Slide } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\n\nconst MessagePopup = props => {\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    props.setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Snackbar, {\n    open: props.open,\n    onClose: handleClose,\n    autoHideDuration: 2000,\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      onClose: handleClose,\n      severity: props.severity,\n      children: props.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MessagePopup;\nexport default MessagePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessagePopup\");","map":{"version":3,"sources":["C:/Users/Lenovo/OneDrive/Desktop/JobBlitz/frontend/src/lib/MessagePopup.js"],"names":["Snackbar","Slide","Alert","MessagePopup","props","handleClose","event","reason","setOpen","open","severity","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,mBAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AACDH,IAAAA,KAAK,CAACI,OAAN,CAAc,KAAd;AACD,GALD;;AAMA,sBACE,QAAC,QAAD;AAAU,IAAA,IAAI,EAAEJ,KAAK,CAACK,IAAtB;AAA4B,IAAA,OAAO,EAAEJ,WAArC;AAAkD,IAAA,gBAAgB,EAAE,IAApE;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEA,WAAhB;AAA6B,MAAA,QAAQ,EAAED,KAAK,CAACM,QAA7C;AAAA,gBACGN,KAAK,CAACO;AADT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAdD;;KAAMR,Y;AAgBN,eAAeA,YAAf","sourcesContent":["import { Snackbar, Slide } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst MessagePopup = (props) => {\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    props.setOpen(false);\r\n  };\r\n  return (\r\n    <Snackbar open={props.open} onClose={handleClose} autoHideDuration={2000}>\r\n      <Alert onClose={handleClose} severity={props.severity}>\r\n        {props.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default MessagePopup;\r\n"]},"metadata":{},"sourceType":"module"}