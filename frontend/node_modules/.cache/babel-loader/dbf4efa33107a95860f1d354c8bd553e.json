{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ojaswi\\\\JobBlitz\\\\frontend\\\\src\\\\component\\\\NewProfile.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport apiList from \"../lib/apiList\";\nimport { SetPopupContext } from \"../App\";\nimport axios from \"axios\";\n\nconst NewProfile = props => {\n  _s();\n\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n  const [userData, setUserData] = useState();\n  const [open, setOpen] = useState(false);\n  const [profileDetails, setProfileDetails] = useState({\n    name: \"\",\n    education: [],\n    skills: [],\n    resume: \"\",\n    profile: \"\"\n  });\n  const [education, setEducation] = useState([{\n    institutionName: \"\",\n    startYear: \"\",\n    endYear: \"\"\n  }]);\n\n  const handleInput = (key, value) => {\n    setProfileDetails({ ...profileDetails,\n      [key]: value\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios.get(apiList.user, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(response => {\n      console.log(response.data);\n      setProfileDetails(response.data);\n\n      if (response.data.education.length > 0) {\n        setEducation(response.data.education.map(edu => ({\n          institutionName: edu.institutionName ? edu.institutionName : \"\",\n          startYear: edu.startYear ? edu.startYear : \"\",\n          endYear: edu.endYear ? edu.endYear : \"\"\n        })));\n      }\n    }).catch(err => {\n      console.log(err.response.data);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Error\"\n      });\n    });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const editDetails = () => {\n    setOpen(true);\n  };\n\n  const handleUpdate = () => {\n    console.log(education);\n    let updatedDetails = { ...profileDetails,\n      education: education.filter(obj => obj.institutionName.trim() !== \"\").map(obj => {\n        if (obj[\"endYear\"] === \"\") {\n          delete obj[\"endYear\"];\n        }\n\n        return obj;\n      })\n    };\n    axios.put(apiList.user, updatedDetails, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(response => {\n      setPopup({\n        open: true,\n        severity: \"success\",\n        message: response.data.message\n      });\n      getData();\n    }).catch(err => {\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: err.response.data.message\n      });\n      console.log(err.response);\n    });\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      item: true,\n      direction: \"column\",\n      alignItems: \"center\",\n      style: {\n        padding: \"30px\",\n        minHeight: \"93vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          style: {\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            alignItems: \"stretch\",\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Name\",\n                value: profileDetails.name,\n                onChange: event => handleInput(\"name\", event.target.value),\n                className: classes.inputBox,\n                variant: \"outlined\",\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MultifieldInput, {\n              education: education,\n              setEducation: setEducation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(ChipInput, {\n                className: classes.inputBox,\n                label: \"Skills\",\n                variant: \"outlined\",\n                value: profileDetails.skills,\n                onAdd: chip => setProfileDetails({ ...profileDetails,\n                  skills: [...profileDetails.skills, chip]\n                }),\n                onDelete: (chip, index) => {\n                  let skills = profileDetails.skills;\n                  skills.splice(index, 1);\n                  setProfileDetails({ ...profileDetails,\n                    skills: skills\n                  });\n                },\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"title\",\n                label: \"Resume Link\",\n                variant: \"outlined\",\n                fullWidth: true,\n                value: profileDetails.resume,\n                onChange: e => setProfileDetails({ ...profileDetails,\n                  resume: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"title\",\n                label: \"Profile Image Link\",\n                variant: \"outlined\",\n                fullWidth: true,\n                value: profileDetails.profile,\n                onChange: e => setProfileDetails({ ...profileDetails,\n                  profile: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            style: {\n              padding: \"10px 50px\",\n              marginTop: \"30px\"\n            },\n            onClick: () => handleUpdate(),\n            children: \"Update Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(NewProfile, \"9TYoyHlVGV4d5TQpbtPMowUSBAI=\", true);\n\n_c = NewProfile;\nexport default NewProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProfile\");","map":{"version":3,"sources":["C:/Users/ojaswi/JobBlitz/frontend/src/component/NewProfile.js"],"names":["React","useEffect","useState","apiList","SetPopupContext","axios","NewProfile","props","classes","useStyles","setPopup","useContext","userData","setUserData","open","setOpen","profileDetails","setProfileDetails","name","education","skills","resume","profile","setEducation","institutionName","startYear","endYear","handleInput","key","value","getData","get","user","headers","Authorization","localStorage","getItem","then","response","console","log","data","length","map","edu","catch","err","severity","message","handleClose","editDetails","handleUpdate","updatedDetails","filter","obj","trim","put","padding","minHeight","outline","display","flexDirection","justifyContent","alignItems","event","target","inputBox","chip","index","splice","e","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useEffect , useState} from 'react';\r\nimport apiList from \"../lib/apiList\";\r\nimport { SetPopupContext } from \"../App\";\r\nimport axios from \"axios\";\r\n\r\nconst NewProfile = (props) => {\r\n    const classes = useStyles();\r\n    const setPopup = useContext(SetPopupContext);\r\n    const [userData, setUserData] = useState();\r\n    const [open, setOpen] = useState(false);\r\n  \r\n    const [profileDetails, setProfileDetails] = useState({\r\n      name: \"\",\r\n      education: [],\r\n      skills: [],\r\n      resume: \"\",\r\n      profile: \"\",\r\n    });\r\n  \r\n    const [education, setEducation] = useState([\r\n      {\r\n        institutionName: \"\",\r\n        startYear: \"\",\r\n        endYear: \"\",\r\n      },\r\n    ]);\r\n  \r\n    const handleInput = (key, value) => {\r\n      setProfileDetails({\r\n        ...profileDetails,\r\n        [key]: value,\r\n      });\r\n    };\r\n  \r\n    useEffect(() => {\r\n      getData();\r\n    }, []);\r\n  \r\n    const getData = () => {\r\n      axios\r\n        .get(apiList.user, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          setProfileDetails(response.data);\r\n          if (response.data.education.length > 0) {\r\n            setEducation(\r\n              response.data.education.map((edu) => ({\r\n                institutionName: edu.institutionName ? edu.institutionName : \"\",\r\n                startYear: edu.startYear ? edu.startYear : \"\",\r\n                endYear: edu.endYear ? edu.endYear : \"\",\r\n              }))\r\n            );\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response.data);\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: \"Error\",\r\n          });\r\n        });\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n  \r\n    const editDetails = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleUpdate = () => {\r\n      console.log(education);\r\n  \r\n      let updatedDetails = {\r\n        ...profileDetails,\r\n        education: education\r\n          .filter((obj) => obj.institutionName.trim() !== \"\")\r\n          .map((obj) => {\r\n            if (obj[\"endYear\"] === \"\") {\r\n              delete obj[\"endYear\"];\r\n            }\r\n            return obj;\r\n          }),\r\n      };\r\n  \r\n      axios\r\n        .put(apiList.user, updatedDetails, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          setPopup({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: response.data.message,\r\n          });\r\n          getData();\r\n        })\r\n        .catch((err) => {\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: err.response.data.message,\r\n          });\r\n          console.log(err.response);\r\n        });\r\n      setOpen(false);\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <Grid\r\n          container\r\n          item\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n        >\r\n          <Grid item>\r\n            <Typography variant=\"h2\">Profile</Typography>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Paper\r\n              style={{\r\n                padding: \"20px\",\r\n                outline: \"none\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Grid container direction=\"column\" alignItems=\"stretch\" spacing={3}>\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    value={profileDetails.name}\r\n                    onChange={(event) => handleInput(\"name\", event.target.value)}\r\n                    className={classes.inputBox}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <MultifieldInput\r\n                  education={education}\r\n                  setEducation={setEducation}\r\n                />\r\n                <Grid item>\r\n                  <ChipInput\r\n                    className={classes.inputBox}\r\n                    label=\"Skills\"\r\n                    variant=\"outlined\"\r\n                    value={profileDetails.skills}\r\n                    onAdd={(chip) =>\r\n                      setProfileDetails({\r\n                        ...profileDetails,\r\n                        skills: [...profileDetails.skills, chip],\r\n                      })\r\n                    }\r\n                    onDelete={(chip, index) => {\r\n                      let skills = profileDetails.skills;\r\n                      skills.splice(index, 1);\r\n                      setProfileDetails({\r\n                        ...profileDetails,\r\n                        skills: skills,\r\n                      });\r\n                    }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                <TextField name=\"title\" label=\"Resume Link\" variant=\"outlined\"  fullWidth value={profileDetails.resume} onChange={(e) => setProfileDetails({ ...profileDetails, resume : e.target.value })} required />\r\n                </Grid>\r\n                <Grid item>\r\n                <TextField name=\"title\" label=\"Profile Image Link\" variant=\"outlined\"  fullWidth value={profileDetails.profile} onChange={(e) => setProfileDetails({ ...profileDetails, profile : e.target.value })} required /> \r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\r\n                onClick={() => handleUpdate()}\r\n              >\r\n                Update Details\r\n              </Button>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  };\r\n\r\nexport default NewProfile"]},"metadata":{},"sourceType":"module"}